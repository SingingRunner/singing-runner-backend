name: Merge to Main and Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  EC2_INSTANCE_USERNAME: ${{ secrets.EC2_INSTANCE_USERNAME }}
  EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install
        
      - name: Extract version from PR message
        id: extract-version
        run: |
          version=$(echo "${{ github.event.pull_request.title }}" | grep -oP '(?<=\[Version: ).*?(?=\])')
          echo "::set-output name=version::$version"

      - name: Build Docker image
        run: |
          version=${{ steps.extract-version.outputs.version }}
          docker build -t singing-runner-backend:$version .

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/singing-runner-backend:${{ steps.extract-version.outputs.version }}

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ${{ secrets.EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker rmi -f $(docker images -q) || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/singing-runner-backend:${{ steps.extract-version.outputs.version }}
            docker run -d -p 4000:4000 --name singing-runner-backend ${{ secrets.DOCKERHUB_USERNAME }}/singing-runner-backend:${{ steps.extract-version.outputs.version }}
